name: Reusable PG Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      docker_compose_file:
        required: true
        type: string
      image_name:
        required: true
        type: string
    secrets:
      SERVER_HOST:
        required: true
      SSH_USERNAME:
        required: true
      SSHKEY:
        required: true
      DOCKER_REGISTRY_USERNAME:
        required: true
      DOCKER_REGISTRY_PASSWORD:
        required: true
      ENV_FILE_CONTENT:
        required: true

env:
  DB_DIR: week_2/config
  DOCKER_REGISTRY_URL: cr.selcloud.ru/mfisher1411

jobs:
  build-and-push:
    name: Build and Push migrator
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Create env file
        run: |
          echo "${{ secrets.ENV_FILE_CONTENT }}" > ${{ env.DB_DIR }}/${{ inputs.environment }}.env

      - name: Setup Docker Tag
        id: meta
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Image name
        run: |
          echo "MIGRATOR_IMAGE=${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.image_name }}:${{ steps.meta.outputs.tag }}" >> "$GITHUB_ENV"

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build migrator
        run: docker compose -f ${{ env.DB_DIR }}/${{ inputs.docker_compose_file }} build

      - name: Push migrator
        if: ${{ github.event_name != 'pull_request' }}
        run: docker image push ${{ env.MIGRATOR_IMAGE }}

  deploy:
    name: Deploy DB and Migrate on Selectel
    needs: build-and-push
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@v3

      - name: Create env files
        run: |
          echo "${{ secrets.ENV_FILE_CONTENT }}" > ${{ env.DB_DIR }}/${{ inputs.environment }}.env
          echo "# Autogenerated .env file" > ${{ env.DB_DIR }}/.env
          echo "MIGRATOR_IMAGE=${{ env.DOCKER_REGISTRY_URL }}/${{ inputs.image_name }}:${{ needs.build-and-push.outputs.tag }}" >> ${{ env.DB_DIR }}/.env

      - name: Copy files to Selectel
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSHKEY }}
          source: "${{ env.DB_DIR }}/${{ inputs.docker_compose_file }},${{ env.DB_DIR }}/${{ inputs.environment }}.env,${{ env.DB_DIR }}/.env"
          target: "~/.deploy/"

      - name: Run Compose on Selectel
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSHKEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} -p ${{ secrets.DOCKER_REGISTRY_PASSWORD }} ${{ env.DOCKER_REGISTRY_URL }}
            cd ~/.deploy/${{ env.DB_DIR }}
            docker compose -f ./${{ inputs.docker_compose_file }} up -d
